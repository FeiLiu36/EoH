[
     {
          "algorithm": "",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    \"\"\"The new algorithm calculates the scores for the bins by taking the square root of the product of the item size, \n    the logarithm of the remaining capacity normalized by the maximum remaining capacity, and the square of the reciprocal \n    of the ratio between the remaining capacity and the maximum remaining capacity, then subtracts the minimum score \n    across all bins, raises the result to the power of 3, and adds it to the sum of the maximum score across all bins.\"\"\"\n\n    # Calculate the remaining capacity of each bin\n    remaining_capacity = bins - item\n    \n    # Calculate the maximum remaining capacity\n    max_remaining_capacity = np.max(remaining_capacity)\n    \n    # Calculate the logarithm of the remaining capacity normalized by the maximum remaining capacity\n    log_capacity = np.log(remaining_capacity / max_remaining_capacity)\n    \n    # Calculate the square of the reciprocal of the ratio between the remaining capacity and the maximum remaining capacity\n    reciprocal_ratio_squared = np.square(1 / (remaining_capacity / max_remaining_capacity))\n    \n    # Calculate the product of the item size, the logarithm of the remaining capacity normalized by the maximum remaining capacity,\n    # and the square of the reciprocal of the ratio between the remaining capacity and the maximum remaining capacity\n    product = np.sqrt(item * log_capacity * reciprocal_ratio_squared)\n    \n    # Subtract the minimum score across all bins\n    min_score = np.min(product)\n    product -= min_score\n    \n    # Raise the result to the power of 3\n    cubed_product = np.power(product, 3)\n    \n    # Take the sum of the maximum score across all bins\n    max_score = np.sum(np.max(cubed_product, axis=0))\n    \n    # Calculate the scores for the bins\n    scores = np.sum(cubed_product, axis=0) + max_score\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
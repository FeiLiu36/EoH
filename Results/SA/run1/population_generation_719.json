[
     {
          "algorithm": "Algorithm description: The new algorithm calculates the scores for the bins by taking the inverse of the item size multiplied by the product of the remaining capacities of the bins, subtracting the logarithm of the sum of the remaining capacities from the logarithm of the maximum capacity, raising the subtracted value to the power of the maximum capacity divided by the item size, normalizing the scores by dividing them by the sum of the raised values, and finally multiplying the normalized scores by a factor based on the maximum capacity divided by the logarithm of the maximum capacity.\n\nCode:\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    sum_capacity = np.sum(bins)\n    subtracted_value = (1 / item) * np.prod(bins) - np.log(sum_capacity)\n    raised_value = subtracted_value ** (max_capacity / item)\n    normalized_scores = raised_value / np.sum(raised_value)\n    scores = normalized_scores * (max_capacity / np.log(max_capacity))\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "",
          "code": "import numpy as np\n\ndef score(item, bins):\n    \"\"\"Create a new algorithm that calculates the scores for the bins\n    by taking the logarithm of the remaining capacities of the bins divided by the item size,\n    multiplies it by a penalty factor, subtracts the maximum value across all bins from the obtained scores,\n    and finally normalizes the scores by dividing them by the sum of all scores.\"\"\"\n\n    # Calculate the logarithm of the remaining capacities of the bins divided by the item size\n    log_capacity = np.log(bins.astype(float) / item)\n\n    # Define the penalty factor\n    penalty_factor = 0.5\n\n    # Multiply the log capacity by the penalty factor\n    scores = log_capacity * penalty_factor\n\n    # Subtract the maximum value across all bins from the scores\n    scores -= np.max(scores)\n\n    # Normalize the scores by dividing them by the sum of all scores\n    scores /= np.sum(scores)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
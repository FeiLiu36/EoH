[
     {
          "algorithm": "The new algorithm assigns scores to the bins by taking the product of the inverse of the sum of the bin capacities squared divided by the cube root of the item size, and the logarithm of the sum of the bin capacities divided by the absolute difference between the sum of the bin capacities and the item size, divided by the average bin capacity, then multiplied by the square of the item size, the logarithm of the item size, and the logarithm of the average bin capacity, and adding the inverse of the sum of the bin capacities divided by the square root of the item size multiplied by the cube root of the logarithm of the item size, squared.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    bin_sum = np.sum(bins)\n    bin_avg = bin_sum / len(bins)\n    bin_capacity = len(bins)\n\n    scores = (np.reciprocal(bin_sum**2) / np.cbrt(item) * np.log(bin_sum / np.abs(bin_sum - item) / bin_avg) * item**2 * np.log(item) * np.log(bin_avg) + np.reciprocal(bin_sum) / np.sqrt(item) * np.cbrt(np.log(item))**2 )  \n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
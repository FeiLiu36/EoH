[
     {
          "algorithm": "Algorithm description: The new algorithm assigns the item to the bin with the minimum difference between the item size and the current bin capacity and calculates the scores for the other bins based on the following modified scoring formula: the current bin capacity divided by the maximum capacity plus one, multiplied by the inverse square root of the item size divided by the maximum capacity, multiplied by the inverse square root of the current bin capacity divided by the maximum capacity, multiplied by the inverse of the difference between the item size and the bin capacity. The scores are then multiplied together with the exponential of the sum of bin capacities divided by the maximum capacity plus one.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    min_diff_bin = np.argmin(np.abs(item - bins))\n    \n    diffs = np.abs(item - bins)\n    min_diff_score = (\n        bins / (np.max(bins) + 1)\n        * (1 / np.sqrt(item / np.max(bins)))\n        * (1 / np.sqrt(bins / np.max(bins)))\n        * (1 / diffs)\n    )\n    sum_exponential = np.exp(np.sum(bins) / (np.max(bins) + 1))\n\n    scores = min_diff_score * diffs * sum_exponential\n\n    return scores",
          "objective": 0.04095,
          "other_inf": null
     }
]
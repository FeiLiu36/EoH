[
     {
          "algorithm": "New algorithm description: The new algorithm calculates the score for each bin as the sum of the reciprocal of the differences between the rest capacity and the maximum capacity of all bins, divided by the item size, and then normalized to ensure they sum up to 1.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    diff_reciprocal = 1 / np.abs(rest_capacity - max_capacity)\n    scores = np.sum(diff_reciprocal / item)\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
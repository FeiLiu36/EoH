[
     {
          "algorithm": "The new algorithm calculates the score for each bin by multiplying the item size by a factor computed from the ratio of the rest capacity of the bin to the maximum rest capacity, and dividing it by the sum of all ratios of bins. The scores are then multiplied by a constant factor W.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    \n    # Calculate the ratio of rest capacity to maximum rest capacity\n    ratios = rest_capacity / max_capacity\n    \n    # Compute the factor using the sum of all ratios\n    factor = np.sum(ratios)\n    \n    # Calculate the score for each bin\n    scores = (item * ratios) / factor\n    \n    # Multiply scores by a constant factor\n    W = 1.5\n    scores *= W\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "Algorithm description: The new algorithm assigns scores to the bins based on the sum of the logarithm of the remaining capacities divided by the square root of the maximum remaining capacity plus 1, and the product of the logarithm of the item size plus 1 and the square root of the sum of the remaining capacities divided by the maximum remaining capacity plus 1, all raised to the power of the square root of the sum of the remaining capacities divided by the maximum capacity plus 1, plus the logarithm of the item size plus 1, multiplied by the sum of the remaining capacities divided by the maximum remaining capacity plus 1, and further multiplied by the inverse of the ratio of the maximum remaining capacity to the sum of the remaining capacities plus 1.\n\nCode:\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n\n    scores = (np.log(remaining_capacity) / np.sqrt(max_capacity + 1)) + (np.log(item + 1) * np.sqrt(np.sum(remaining_capacity) / (max_capacity + 1))) ** np.sqrt(np.sum(remaining_capacity) / (max_capacity + 1)) + np.log(item + 1) * (np.sum(remaining_capacity) / (max_capacity + 1)) * (1 / ((max_capacity / (1 + np.sum(remaining_capacity)))))\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
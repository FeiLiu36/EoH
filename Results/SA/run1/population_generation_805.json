[
     {
          "algorithm": "The new algorithm calculates the scores for the bins by taking the element-wise product of the item size and the exponential of the negative absolute differences between the bin capacities and the item size, and subtracting the square of the natural logarithm of the sum of the bin capacities divided by the item size, multiplied by the item size. Then it multiplies each score by the reciprocal of the difference between the item size and the maximum bin capacity, squares the result, and adds the element-wise product of the natural logarithm of the item size divided by the bin capacities and the square of the difference between the item size and the maximum bin capacity.\n\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    exp_neg_diff = np.exp(-np.abs(bins - item))\n    scores = (item * exp_neg_diff) - (np.log(np.sum(bins) / item)**2 * item)\n    scores = scores * (1 / (item - max_capacity))\n    scores = np.square(scores) + (np.log(item) / bins) * np.square(item - max_capacity)\n    \n    return scores",
          "objective": 0.04216,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin by multiplying the ratio between the item size and the rest capacity of each bin by a penalty factor, which is a function of the sum of the rest capacities of all the bins, the sum of the assigned items, and the maximum capacity. Finally, the scores are obtained by dividing the ratio and penalty factor by the maximum ratio, and then normalizing them.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratio between item size and rest capacity of each bin\n    ratio = item / bins\n    \n    # Calculate the penalty factor\n    sum_rest_capacities = np.sum(bins)\n    sum_assigned_items = np.sum(sum_rest_capacities - bins)\n    max_capacity = np.max(bins)\n    penalty_factor = (sum_rest_capacities / sum_assigned_items) / max_capacity\n    \n    # Calculate the scores\n    scores = ratio * penalty_factor\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
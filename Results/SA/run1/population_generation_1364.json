[
     {
          "algorithm": "New algorithm: Modified Penalty Proximity Score Function Algorithm\n\nThe main steps of the algorithm are as follows:\n\n1. Calculate the maximum capacity of the bins.\n2. Find the number of bins (num_bins) and the number of empty bins (num_empty_bins).\n3. Calculate the difference between the item size and the rest capacities of the bins.\n4. Calculate the penalty term, which penalizes bins close to maximum capacity, using the formula: ((bins - max_capacity) / max_capacity) ** 2.\n5. Calculate the proximity term, which penalizes bins farther away from maximum capacity, using the formula: (bins / max_capacity) ** 2.\n6. Calculate the ratio term by taking the inverse of the difference between the item and the bin size divided by the square of the capacity plus 1.\n7. Calculate the capacity term by subtracting the rest capacities of the bins from the maximum capacity and dividing it by the maximum capacity.\n8. Calculate the scores for the bins by combining the ratio term, capacity term, penalty term, and proximity term as follows: scores = ratio_term + capacity_term - penalty_term - proximity_term.\n9. Sort the scores in descending order.\n10. Return the scores.\n\nHere is the Python implementation of the new algorithm:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    num_bins = len(bins)\n    num_empty_bins = np.count_nonzero(bins == max_capacity)\n\n    difference = item - bins\n\n    # Penalty term\n    penalty_term = ((bins - max_capacity) / max_capacity) ** 2\n\n    # Proximity term\n    proximity_term = (bins / max_capacity) ** 2\n\n    # Ratio term\n    ratio_term = 1 / (difference / (bins**2 + 1))\n\n    # Capacity term\n    capacity_term = (max_capacity - bins) / max_capacity\n\n    # Calculate scores\n    scores = ratio_term + capacity_term - penalty_term - proximity_term\n\n    # Sort scores in descending order\n    sorted_scores = np.sort(scores)[::-1]\n\n    return scores",
          "objective": 0.01439,
          "other_inf": null
     }
]
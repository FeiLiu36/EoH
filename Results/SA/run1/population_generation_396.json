[
     {
          "algorithm": "New algorithm: The new algorithm calculates the score for each bin by taking the product of the logarithm of the item size to the maximum capacity ratio and the logarithm of the ratio of the maximum capacity to the rest capacity of each bin, and then applies a power transformation to the result to map it to a value between 0 and 1.\n\nPython implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the maximum capacity of the bins\n    max_capacity = np.max(bins)\n\n    # Calculate the item size to maximum capacity ratio\n    item_ratio = item / max_capacity\n    \n    # Calculate the ratio of maximum capacity to rest capacity of each bin\n    capacity_ratio = max_capacity / bins\n    \n    # Calculate the score for each bin\n    scores = ((np.log(item_ratio) * np.log(capacity_ratio)) ** 2) / np.max(((np.log(item_ratio) * np.log(capacity_ratio)) ** 2))\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
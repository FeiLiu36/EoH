[
     {
          "algorithm": "\nNew Algorithm: Modified Weighted Ratio Score Algorithm\n\n1. The new algorithm calculates the scores as the weighted ratio of two components: the item size and the rest capacity of the bins.\n2. The item size component is the item size divided by the maximum capacity of the bins.\n3. The rest capacity component is the rest capacity of the bins divided by the maximum capacity of the bins.\n4. The scores are calculated as the weighted ratio of the item size component and the rest capacity component, with the rest capacity component being the weight for the rest capacity component.\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    \"\"\"The Modified Weighted Ratio Score Algorithm calculates the scores as the weighted ratio of the item size and the rest capacity of the bins.\"\"\"\n\n    max_capacity = np.max(bins)\n    \n    # Calculate the item size component as the item size divided by the maximum capacity of the bins\n    item_size_component = item / max_capacity\n    \n    # Calculate the rest capacity component as the rest capacity of the bins divided by the maximum capacity of the bins\n    rest_capacity_component = bins / max_capacity\n    \n    # Calculate the scores as the weighted ratio of the item size component and the rest capacity component\n    scores = item_size_component / rest_capacity_component\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "new_algorithm: The new algorithm assigns scores to the bins based on the sum of the square roots of the remaining capacities divided by the maximum remaining capacity plus 1, raised to the power of the logarithm of the maximum remaining capacity divided by the item size plus one, multiplied by the square root of the sum of the remaining capacities divided by the maximum capacity plus 1.\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n\n    scores = np.power((np.sqrt(remaining_capacity) / (max_capacity + 1)) + 1, np.log(max_capacity / item + 1) * np.sqrt(np.sum(remaining_capacity) / (max_capacity + 1)))\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New Algorithm: Capacity Scaling and Item Ratio Score Algorithm\n\nThe new algorithm calculates the scores as the capacity scaling factor multiplied by the ratio between the item size and the rest capacity of the bins. The capacity scaling factor ensures that bins with higher rest capacities are favored.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    \"\"\"The Capacity Scaling and Item Ratio Score Algorithm calculates the scores as the capacity scaling factor multiplied by the ratio between the item size and the rest capacity of the bins.\"\"\"\n\n    # Calculate the capacity scaling factor as the maximum rest capacity of the bins\n    capacity_scaling_factor = np.max(bins)\n    \n    # Calculate the ratio between the item size and the rest capacity of the bins\n    item_ratio = item / bins\n    \n    # Calculate the scores as the capacity scaling factor multiplied by the item ratio\n    scores = capacity_scaling_factor * item_ratio\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
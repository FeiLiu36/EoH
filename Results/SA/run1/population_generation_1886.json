[
     {
          "algorithm": "Algorithm Description (Modified Algorithm):\n\nThe \"Modified Score Function\" assigns scores to the bins based on a modified scoring equation. The equation incorporates the rest capacity of each bin, the maximum capacity of all bins, and a defined weight assigned to each term. This modified algorithm introduces two new terms: a square root term that calculates the square root of the sum of the rest capacity and the maximum capacity, and a logarithmic term that utilizes the logarithm of the difference between the rest capacity and the item capacity. The weights for each term are adjusted to prioritize the square root and logarithmic terms, while still considering the exponential, linear, ratio, and quadratic terms from the original algorithm.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate statistics\n    max_capacity = np.max(bins)\n    average_capacity = np.mean(bins)\n\n    # Additional variables\n    weight_exp = 0.05\n    weight_lin = 0.1\n    weight_sqrt = 0.35\n    weight_ratio = 0.1\n    weight_quad = 0.15\n    weight_log = 0.25\n\n    # Scoring terms (Modified to include square root and logarithmic terms)\n    exponential_term = np.exp(-(bins - item) / max_capacity)  # Modified: Rest capacity divided by maximum capacity\n\n    linear_term = (bins - item) / max_capacity  # Modified: Rest capacity divided by maximum capacity\n\n    sqrt_term = np.sqrt(bins + max_capacity)  # New: Square root of the sum of rest and maximum capacity of bins\n\n    ratio_term = np.power(bins / (bins - item), 2)  # Modified: Rest capacity divided by item capacity\n\n    quadratic_term = np.zeros_like(bins)\n    quadratic_term[:7] = (bins[:7] ** 2) / 4\n\n    logarithmic_term = np.log1p(bins - item)  # New: Logarithm of the difference between rest capacity and item capacity\n\n    scores = (\n        weight_exp * exponential_term\n        + weight_lin * linear_term\n        + weight_sqrt * sqrt_term\n        + weight_ratio * ratio_term\n        + weight_quad * quadratic_term\n        + weight_log * logarithmic_term\n    ) / (\n        weight_exp\n        + weight_lin\n        + weight_sqrt\n        + weight_ratio\n        + weight_quad\n        + weight_log\n    )\n\n    return scores",
          "objective": 0.00694,
          "other_inf": null
     }
]
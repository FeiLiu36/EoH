[
     {
          "algorithm": "\nThe new algorithm assigns scores to the bins based on the logarithm of the remaining capacities divided by the maximum remaining capacity, multiplied by the sum of the remaining capacities divided by the maximum remaining capacity plus 1, and further multiplied by the inverse of the ratio of the maximum remaining capacity to the sum of the remaining capacities plus 1, all raised to the power of the logarithm of the item size plus 1, divided by the square root of the maximum remaining capacity plus 1.\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n\n    scores = ((np.log(remaining_capacity) / max_capacity) * (np.sum(remaining_capacity) / (max_capacity + 1)) * (1 / ((max_capacity / (1 + np.sum(remaining_capacity))))) ** (np.log(item + 1) / np.sqrt(max_capacity + 1)))\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
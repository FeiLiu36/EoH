[
     {
          "algorithm": "My new algorithm calculates the score for each bin by multiplying the ratio between the item size and the rest capacity of each bin by a reward factor, which is a function of the maximum capacity and the sum of the assigned items. Finally, the scores are obtained by dividing the ratio and reward factor by the maximum ratio, and then normalizing them.\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratio between item size and rest capacity of each bin\n    ratio = item / bins\n    \n    # Calculate the reward factor\n    sum_assigned_items = np.sum(bins)\n    max_capacity = np.max(bins)\n    reward_factor = max_capacity / (sum_assigned_items + max_capacity)\n    \n    # Calculate the scores\n    scores = ratio * reward_factor\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
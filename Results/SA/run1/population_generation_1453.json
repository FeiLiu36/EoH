[
     {
          "algorithm": "New Algorithm Description: The new algorithm, named Modified Score Function Algorithm, aims to modify the scoring system by incorporating a logarithmic term that penalizes bins with capacities much larger than the item size while still considering the polynomial term, penalty term, and capacity term from the previous algorithm.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    alpha = 0.1\n    m = 5\n\n    sorted_bins = np.sort(bins)\n    \n    polynomial_term = bins ** alpha  # Polynomial term\n\n    quadratic_term2 = np.zeros_like(bins)\n    quadratic_term2[:m] = alpha * (bins[:m] ** 2)  # Quadratic term\n\n    ratio_term = (bins ** 2 + 1) / ((item - bins) + 1)  # Ratio term\n\n    capacity_term = bins / max_capacity  # Capacity term\n\n    penalty_term = np.exp((bins - max_capacity) / max_capacity)  # Penalty term\n\n    exponential_term = np.exp(-(bins - item) / item)  # Exponential term\n\n    modified_exponential_term = np.exp(-(bins - item) / (0.5 * item))  # Modified exponential term\n\n    logarithmic_term = np.log(bins / item)  # Logarithmic term\n\n    scores = (\n        ratio_term + quadratic_term2 + capacity_term - penalty_term\n        + polynomial_term - exponential_term + modified_exponential_term - logarithmic_term\n    )\n\n    sorted_scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.01097,
          "other_inf": null
     }
]
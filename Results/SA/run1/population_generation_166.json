[
     {
          "algorithm": "The new algorithm calculates the score for each bin as the square of the ratio between the rest capacity of the bin and the difference between the maximum capacity and the item size, all squared. This score is then normalized to maintain self-consistency.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    ratio_term = rest_capacity / (max_capacity - item)\n    scores = ratio_term**2\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
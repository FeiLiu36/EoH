[
     {
          "algorithm": "Algorithm: Enhanced Exponential Score Function Algorithm\n\nThis enhanced algorithm assigns a score to each bin by considering three factors: an exponential decay term, a ratio term, and a capacity term. The exponential decay term is calculated using an exponential decay function with a decay factor, the ratio term is the inverse of the ratio of the difference between the item and the bin size to the square of the capacity plus 1, and the capacity term remains the same as before. The scores are then sorted in descending order.\n\nPython implementation of the Enhanced Exponential Score Function Algorithm:\n\n```\nCode:\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    \n    difference = item - bins\n    \n    # Exponential decay term\n    decay_factor = 0.1 # Adjust this factor for different decay rates\n    decay_term = np.exp(-decay_factor * (difference / max_capacity))\n    \n    # Ratio term\n    ratio_term = 1 / (difference / (bins**2 + 1))\n    \n    # Capacity term\n    capacity_term = 1 - bins / max_capacity\n    \n    # Calculate scores\n    scores = decay_term + ratio_term + capacity_term\n    \n    # Sort scores in descending order\n    sorted_scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.0165,
          "other_inf": null
     }
]
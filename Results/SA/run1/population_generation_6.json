[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacity of the bin, the size of the item, and a combination of penalties and bonuses determined by various factors such as the ratio between the remaining capacity and the item size, the remaining capacity relative to the maximum capacity, and the item size relative to the maximum capacity. Bins with a higher score are more likely to be chosen for assignment, while bins with the maximum capacity are not used.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n    ratio = remaining_capacity / item\n    penalty = (1 - bins / max_capacity) * np.sqrt(np.log2(max_capacity / remaining_capacity))\n    bonus = (bins / item) * np.sqrt(np.log2(max_capacity / remaining_capacity))\n    size_bonus = (bins / max_capacity) * (item / max_capacity)\n    scores = remaining_capacity + penalty + bonus + ratio + size_bonus\n    scores[bins == max_capacity] = -np.inf\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the scores for the bins by dividing the item size by the remaining capacities of the bins, taking the logarithm of the division results, subtracting the minimum logarithm, raising the subtracted logarithms to the power of the logarithm of the item size divided by the maximum capacity, normalizing the scores by dividing them by the sum of the raised logarithms, and finally multiplying the normalized scores by a factor based on the logarithm of the maximum capacity squared multiplied by the item size.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    logarithms = np.log(item / bins)\n    subtracted_logarithms = logarithms - np.min(logarithms)\n    raised_logarithms = subtracted_logarithms ** (np.log(item) / np.log(max_capacity))\n    normalized_scores = raised_logarithms / np.sum(raised_logarithms)\n    scores = normalized_scores * np.log((max_capacity ** 2) * item)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the scores for each bin based on the ratio of the item size to the rest capacity of the bins. The score for each bin is calculated by dividing the item size by the rest capacity and then multiplying by a constant factor to promote performance. The scores are then normalized to have a maximum value of 1.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores as the ratio of item size to rest capacity\n    scores = (item / bins) * 1000\n\n    # Normalize the scores by dividing them by the maximum score\n    scores /= np.max(scores)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
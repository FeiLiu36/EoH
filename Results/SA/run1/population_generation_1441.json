[
     {
          "algorithm": "The new algorithm, named Modified Gaussian Score Function Algorithm, aims to improve the scoring system by introducing a Gaussian score function. In addition to the polynomial term and penalty term from the previous algorithm, the modified algorithm replaces the exponential term with a Gaussian term that rewards bins with capacities closer to the item size and penalizes bins with larger capacities.\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    alpha = 0.1\n    m = 5\n\n    sorted_bins = np.sort(bins)\n    polynomial_term = bins ** alpha\n\n    quadratic_term2 = np.zeros_like(bins)\n    quadratic_term2[:m] = alpha * (bins[:m] ** 2)\n\n    ratio_term = (bins ** 2 + 1) / ((item - bins) + 1)\n    capacity_term = bins / max_capacity\n    penalty_term = np.exp((bins - max_capacity) / max_capacity)\n\n    gaussian_term = np.exp(-((bins - item) ** 2) / (2 * (max_capacity ** 2)))\n\n    scores = (\n        ratio_term + quadratic_term2 + capacity_term - penalty_term\n        + polynomial_term + gaussian_term\n    )\n\n    sorted_scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.01087,
          "other_inf": null
     }
]
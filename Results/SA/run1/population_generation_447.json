[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the square root of the ratio between the item size and the rest capacity of each bin, and then multiplying it by a penalty factor. The penalty factor is calculated by dividing the sum of the rest capacities of all the bins by the sum of the assigned items, and then dividing it by the maximum capacity. Finally, the scores are obtained by multiplying the ratio, penalty factor, and the logarithm of the ratio, and then normalizing them.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratio between item size and rest capacity of each bin\n    ratio = item / bins\n    \n    # Calculate the penalty factor\n    sum_rest_capacities = np.sum(bins)\n    sum_assigned_items = np.sum(sum_rest_capacities - bins)\n    max_capacity = np.max(bins)\n    penalty_factor = (sum_rest_capacities / sum_assigned_items) / max_capacity\n    \n    # Calculate the scores\n    scores = ratio * penalty_factor * np.log(ratio)\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.05071,
          "other_inf": null
     }
]
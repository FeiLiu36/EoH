[
     {
          "algorithm": "The new algorithm calculates the score for each bin as the product of the logarithm of the ratio between the item size and the rest capacity and the reciprocal of the ratio between the maximum capacity and the rest capacity. It then normalizes the scores to ensure they sum up to 1.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    ratio_term = np.log(item / rest_capacity)\n    reciprocal_term = 1 / (max_capacity / rest_capacity)\n    scores = ratio_term * reciprocal_term\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
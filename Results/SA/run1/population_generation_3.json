[
     {
          "algorithm": "\nThe new algorithm calculates the score for each bin based on the remaining capacity, the size of the item, and a penalty factor that increases as the remaining capacity of a bin approaches the maximum capacity. The algorithm also considers the ratio between the remaining capacity and the item size to give higher scores to bins that have a larger capacity relative to the item size.\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    penalty = np.linspace(0, 1, len(bins))\n    scores = (max_capacity - bins) / item + penalty * (1 - bins / max_capacity)\n    scores[bins == max_capacity] = -np.inf\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
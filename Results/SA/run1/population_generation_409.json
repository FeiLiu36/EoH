[
     {
          "algorithm": "New algorithm: The new algorithm calculates the score for each bin by taking the inverse of the sum of the item size multiplied by the rest capacity of each bin, and adds it to the square root of the item size divided by the maximum capacity of the bins.\n\nHere's the implementation of the new algorithm in Python:\n\n``` ",
          "code": "import numpy as np\n\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the maximum capacity of the bins\n    max_capacity = np.max(bins)\n    \n    # Calculate the sum of item size multiplied by the rest capacity of each bin\n    size_capacity_sum = np.sum(item * bins)\n    \n    # Calculate the inverse of the sum\n    inverse_sum = 1 / size_capacity_sum\n    \n    # Calculate the square root of the item size divided by the maximum capacity of the bins\n    sqrt_ratio = np.sqrt(item) / max_capacity\n    \n    # Calculate the score for each bin\n    scores = inverse_sum + sqrt_ratio\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "Algorithm: The new algorithm calculates the score for each bin by taking the difference between the item size and the rest capacity of each bin, and then combining it with a penalty factor and a similarity factor. The penalty factor is calculated by dividing the current number of assigned items to each bin by the maximum number of items that can be assigned to any bin. The similarity factor is computed by taking the reciprocal of the absolute difference between the item size and the rest capacity of each bin. Finally, the scores are obtained by multiplying the penalty factor and similarity factor, and then normalizing them.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the difference between item size and rest capacity of each bin\n    difference = item - bins\n    \n    # Calculate the penalty factor\n    assigned_items = np.sum(bins - item, axis=0)\n    max_assigned_items = np.max(assigned_items)\n    penalty_factor = assigned_items / max_assigned_items\n    \n    # Calculate the similarity factor\n    similarity_factor = 1 / np.abs(difference)\n    \n    # Calculate the scores\n    scores = penalty_factor * similarity_factor\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
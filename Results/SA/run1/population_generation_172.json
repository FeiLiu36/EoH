[
     {
          "algorithm": "The new algorithm calculates the score for each bin as the product of the ratio between the rest capacity and the item size, the square root of the ratio between the rest capacity and the maximum capacity, and the inverse of the ratio between the item size and the rest capacity.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    ratio_term = rest_capacity / item\n    sqrt_term = np.sqrt(rest_capacity / max_capacity)\n    inverse_term = 1 / (item / rest_capacity)\n    scores = ratio_term * sqrt_term * inverse_term\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
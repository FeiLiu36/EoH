[
     {
          "algorithm": "The new algorithm calculates the score for each bin as the inverse of the sum of the absolute differences between the rest capacity and the maximum capacity of all bins, divided by the square root of the item size, and then normalized to ensure they sum up to 1.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    diff_sum = np.sum(np.abs(rest_capacity - max_capacity))\n    scores = (1 / diff_sum) / np.sqrt(item)\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
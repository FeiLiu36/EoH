[
     {
          "algorithm": "New Algorithm: Exponential Decay and Capacity Ratio Score Algorithm\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    \"\"\"The Exponential Decay and Capacity Ratio Score Algorithm calculates the scores as the exponential decay of the rest capacity of the bins, \n    further adjusted by the capacity ratio between the item size and the rest capacity.\"\"\"\n\n    # Calculate the exponential decay of the rest capacities with a decay factor of 0.8\n    exponential_decay_scores = np.exp(-0.8 * bins)\n    \n    # Calculate the capacity ratio between the item size and the rest capacity of the bins\n    capacity_ratio = item / bins\n    \n    # Calculate the scores as the product of the exponential decay scores and the capacity ratio\n    scores = exponential_decay_scores * capacity_ratio\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
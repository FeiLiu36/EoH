[
     {
          "algorithm": "The new algorithm assigns scores to the bins based on the ratio of the remaining capacity to the maximum capacity and multiplies it by a factor determined by the item size. The main steps of the algorithm are as follows:}\n\n1. {Calculate the maximum capacity of the bins by finding the maximum value in the 'bins' array.}\n2. {Calculate the remaining capacity of each bin by subtracting the 'bins' array from the maximum capacity.}\n3. {Calculate the scores for each bin based on the ratio of the remaining capacity to the maximum capacity and multiply it by a factor determined by the item size.}\n4. {Normalize the scores by dividing them by the maximum score, ensuring they are in the range [0, 1].}\n5. {Return the scores as a numpy array.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n\n    scores = (remaining_capacity / max_capacity) * item\n    scores /= np.max(scores)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New Algorithm Description: The new algorithm assigns scores to bins based on their remaining capacities and their proximity to the minimum remaining capacity in the set of bins. It includes a term that considers the difference between the bin capacity and the item size, as well as a penalty term that penalizes bins close to their maximum capacity. The algorithm also introduces a reward term that rewards bins with larger remaining capacities and a reward term that rewards bins closer to the minimum remaining capacity in the set of bins.\n\nNew Algorithm Implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    min_capacity = np.min(bins)\n    \n    threshold = 0.4 * max_capacity\n\n    quadratic_term = np.zeros_like(bins)\n    quadratic_term[:7] = 0.25 * (bins[:7] ** 2)  # Quadratic term\n\n    ratio_term = (bins ** 2) / ((item - bins) ** 2 + 1)  # Ratio term\n\n    capacity_term = np.exp(-0.6 * (bins - item) / item)  # Capacity term\n\n    difference_term = np.abs(bins - item)  # Difference term\n\n    penalty_term = np.exp((threshold - bins) / threshold) * (bins > threshold)  # Penalty term\n    ratio_penalty_term = (item / bins) * ((bins - item) > 0)  # Ratio penalty term\n    \n    # New term 1: reward bins with larger remaining capacities\n    reward_term = np.exp((bins - min_capacity) / (max_capacity - min_capacity))  # Reward term\n    \n    # New term 2: reward bins closer to the minimum remaining capacity in the set of bins\n    reward_min_capacity_term = np.exp((min_capacity - bins) / (max_capacity - min_capacity))  # Reward minimum capacity term\n\n    scores = (2 * capacity_term + quadratic_term + ratio_term - difference_term - penalty_term + ratio_penalty_term + reward_term + reward_min_capacity_term) / np.max(2 * capacity_term + quadratic_term + ratio_term - difference_term - penalty_term + ratio_penalty_term + reward_term + reward_min_capacity_term)\n\n    return scores",
          "objective": 0.00815,
          "other_inf": null
     }
]
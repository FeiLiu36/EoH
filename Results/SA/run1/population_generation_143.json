[
     {
          "algorithm": "The new algorithm calculates the score for each bin as the ratio of the item size to the difference between the item size and the bin's rest capacity. The scores are then normalized to maintain self-consistency.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    scores = np.divide(item, item - bins)\n    scores /= np.sum(scores)\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
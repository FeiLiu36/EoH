[
     {
          "algorithm": "Algorithm description: The new algorithm assigns scores to the bins based on a combination of the remaining capacity and the item size factor, with weighted consideration for the remaining capacity and a constant multiplier.\n\nCode:\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n\n    scores = (remaining_capacity * np.log(1 + item)) * 0.6\n    scores /= np.max(scores)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
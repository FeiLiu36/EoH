[
     {
          "algorithm": "The new algorithm scores each bin based on the remaining capacity divided by the item size plus a penalty term based on the difference between the maximum capacity and the remaining capacity. If the remaining capacity is greater than or equal to the item size, the score is set to negative infinity. If the item size is greater than the remaining capacity, the score is set to zero. The scores are then returned as a Numpy array.\n\nHere is the modified implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n    scores = (remaining_capacity / item) + (remaining_capacity == max_capacity) * (-np.inf) + (item > remaining_capacity) * 0\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
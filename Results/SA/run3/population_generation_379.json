[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the logarithm of the ratio between the remaining capacity and the bin size, squared, and multiplied by the reciprocal of the item size plus 1, to promote higher scores for bins with smaller remaining capacity and smaller bin sizes.",
          "code": "import numpy as np\nimport math\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    \n    # Calculate the logarithm of the remaining capacity ratio and square it\n    logarithm_squared = np.log(remaining_capacity / bins) ** 2\n    \n    # Calculate the reciprocal term for more complex score calculation\n    reciprocal_term = 1 / (item + 1)\n    \n    # Calculate the product of the logarithm squared and the reciprocal term\n    weighted_product = logarithm_squared * reciprocal_term\n    \n    # Calculate the final scores\n    scores = np.where(remaining_capacity >= item, 1e9, weighted_product)\n    \n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
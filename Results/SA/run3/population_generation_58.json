[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the natural logarithm of the remaining capacity plus one, then multiplies it by the square root of the remaining capacity, and finally divides by the product of the item size and the remaining capacity squared. The scores are calculated for all bins simultaneously using numpy arrays.\n\nHere is the implementation of the new algorithm in Python:\n\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    scores = (np.log(remaining_capacity + 1) * np.sqrt(remaining_capacity)) / (item * np.square(remaining_capacity))\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
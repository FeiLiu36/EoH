[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the minimum of two terms - one term represents the ratio of the remaining capacity to the maximum capacity, and the other term represents the ratio of the item size to the remaining capacity. The algorithm aims to minimize the score to promote the utilization of bins with higher remaining capacity.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n    ratio1 = remaining_capacity / max_capacity\n    ratio2 = item / remaining_capacity\n    scores = np.minimum(ratio1, ratio2)\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "Algorithm description: The new algorithm calculates the score for each bin by taking the ratio of the item size to the remaining capacity, adding the square of the logarithm of the ratio, multiplying it by a constant factor of 10000, and subtracting the remaining capacity.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    scores = (item / remaining_capacity) + np.square(np.log(item / remaining_capacity)) * 10000 - remaining_capacity\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.0157,
          "other_inf": null
     }
]
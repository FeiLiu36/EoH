[
     {
          "algorithm": "The new algorithm is based on the remaining capacity of the bins and the ratio of the item size to the bin size. It calculates the score by dividing the remaining capacity by the item size multiplied by a constant factor, and further adjusting it based on the ratio of the item size to the bin size. The algorithm aims to promote the usage of bins with smaller remaining capacity by applying a modified penalty term.\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Calculate the ratio of the item size to the remaining capacity\n    ratio = item / remaining_capacity\n\n    # Calculate the penalty for bins with smaller remaining capacity\n    penalty = np.exp(ratio)\n\n    # Calculate the adjusted score based on the ratio and the penalty, multiplied by a constant factor\n    adjusted_score = ratio * penalty * 10\n\n    # Calculate the final scores, adjusting them based on the inverse of the remaining capacity of the bin\n    scores = np.where(remaining_capacity >= item, 1e9, adjusted_score / remaining_capacity)\n\n    return scores",
          "objective": 0.01217,
          "other_inf": null
     }
]
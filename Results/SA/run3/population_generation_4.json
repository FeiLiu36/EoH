[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacity divided by the item size plus a penalty term based on the difference between the maximum capacity and the remaining capacity, and then returns the scores as a Numpy array.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    penalties = max_capacity - bins\n    scores = (penalties + (penalties > 0) * item) / item\n    scores[bins == max_capacity] = -np.inf\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
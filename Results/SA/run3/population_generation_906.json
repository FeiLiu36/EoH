[
     {
          "algorithm": "Algorithm description: The modified algorithm calculates the score for each bin by taking the reciprocal of the square root of the remaining capacity divided by the item size, multiplied by the square root of the ratio between the remaining capacity and the maximum capacity raised to the power of the item size, and subtracting from it the logarithm of the remaining capacity plus one.\n\nCode:\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Calculate the score for each bin\n    reciprocal_sqrt = 1 / np.sqrt(remaining_capacity / item)\n    ratio_power_sqrt = np.sqrt((remaining_capacity / bins) ** item)\n    log = np.log(remaining_capacity + 1)\n    scores = reciprocal_sqrt * ratio_power_sqrt - log\n\n    # Assign maximum scores for bins with remaining capacity >= item size\n    scores = np.where(remaining_capacity >= item, np.inf, scores)\n\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
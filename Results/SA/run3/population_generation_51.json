[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the remaining capacity and the item size, divided by the logarithm of the remaining capacity plus 1. The algorithm aims to minimize the score to encourage the utilization of bins with higher remaining capacity, and it also considers the size of the item.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    scores = (remaining_capacity * item) / (np.log(remaining_capacity + 1))\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.01972,
          "other_inf": null
     }
]
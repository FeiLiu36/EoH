[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the cube root of the remaining capacity and the exponential of the remaining capacity, then divides it by the item size multiplied by the remaining capacity squared.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    scores = (np.cbrt(remaining_capacity) * np.exp(remaining_capacity)) / (item * np.square(remaining_capacity))\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.01972,
          "other_inf": null
     }
]
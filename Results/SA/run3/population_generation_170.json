[
     {
          "algorithm": "New Algorithm: \n1. Take the difference between the item size and the remaining capacity of each bin.\n2. Apply the natural logarithm to the absolute values of the differences.\n3. Square the resulting values.\n4. Multiply the squared values by a constant factor of 10000.\n5. Divide the squared values by the remaining capacity.\n6. Multiply the resulting values by a constant factor of 100.\n7. If the remaining capacity equals the maximum capacity, set the scores of bins to a very high value of 10^9.\n\nCode:\n``` ",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    differences = np.log(np.abs(item - remaining_capacity))\n    squared_differences = differences ** 2\n    squared_differences *= 10000\n    scores = squared_differences / remaining_capacity\n    scores *= 100\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, 1e9), scores)\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
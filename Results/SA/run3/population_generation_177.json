[
     {
          "algorithm": "New Algorithm:\n\n1. Calculate the difference between the item size and the remaining capacity of each bin.\n2. Multiply the resulting differences by a factor of 1000 and square the values.\n3. Calculate the reciprocal of the remaining capacity and multiply it by a factor of 100.\n4. Add the squared values from step 2 and the multiplied reciprocal values from step 3.\n5. Add a constant factor of 10^6 to the resulting values.\n6. If the remaining capacity equals the maximum capacity, set the scores of bins to a very high value of 10^9.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    differences = remaining_capacity - item\n    squared_differences = 1000 * differences**2\n    reciprocal_capacity = 100 / remaining_capacity\n    scores = squared_differences + reciprocal_capacity\n    scores = scores + 1e6\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, 1e9), scores)\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
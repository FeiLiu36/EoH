[
     {
          "algorithm": "New algorithm: The new algorithm calculates the score for each bin by taking the ratio between the remaining capacity and the item size, the logarithm of the remaining capacity divided by the maximum capacity of the bins, a constant factor, and a modified factor that considers the sum of the remaining capacities as a percentage of the maximum capacity.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Define constant factor\n    constant_factor = 0.7\n\n    # Calculate the score for each bin\n    scores = (remaining_capacity / item) * np.log(remaining_capacity / np.max(bins)) * constant_factor * (np.sum(remaining_capacity) / np.sum(bins))\n\n    # Assign maximum scores for bins with remaining capacity >= item size\n    scores = np.where(remaining_capacity >= item, np.inf, scores)\n\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
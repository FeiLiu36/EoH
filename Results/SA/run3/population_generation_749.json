[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the item size divided by the remaining capacity raised to the power of a constant factor, and multiplies it by the logarithm of the difference between the maximum capacity and the remaining capacity.\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Define constant factor\n    constant_factor = 2.0\n\n    # Calculate the score for each bin\n    scores = (item / remaining_capacity) ** constant_factor * np.log(item)\n\n    # Assign maximum scores for bins with remaining capacity >= item size\n    scores = np.where(remaining_capacity >= item, np.inf, scores)\n\n    return scores",
          "objective": 0.0157,
          "other_inf": null
     }
]
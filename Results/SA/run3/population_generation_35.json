[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the remaining capacity and the item size, divided by the square of the maximum capacity plus the square of the absolute difference between the remaining capacity and the item size.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n    scores = (remaining_capacity * item) / (max_capacity**2 + np.abs(remaining_capacity - item)**2)\n    scores = np.where(remaining_capacity >= item, np.full_like(scores, np.inf), scores)\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the sum of the ratio between the remaining capacity and the maximum capacity squared and the square root of the item size divided by the sum of the remaining capacities plus a constant value, and then raises it to the power of the logarithm of the remaining capacity squared.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Define constant factor\n    constant_factor = 2.0\n\n    # Calculate the score for each bin\n    scores = ((remaining_capacity / bins) ** 2 + np.sqrt(item / (np.sum(remaining_capacity) + constant_factor))) ** np.log(remaining_capacity ** 2)\n\n    # Assign maximum scores for bins with remaining capacity >= item size\n    scores = np.where(remaining_capacity >= item, np.inf, scores)\n\n    return scores",
          "objective": 0.01318,
          "other_inf": null
     }
]
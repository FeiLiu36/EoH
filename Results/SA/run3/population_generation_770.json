[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the ratio between the remaining capacity and the maximum capacity squared, the logarithm of the item size divided by the sum of the remaining capacities plus a constant value, the natural logarithm of the remaining capacity squared, and a constant factor.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n\n    # Define constant factor\n    constant_factor = 2.0\n\n    # Calculate the score for each bin\n    scores = (remaining_capacity / bins) ** 2 * np.log(item / (np.sum(remaining_capacity) + constant_factor)) * np.log(remaining_capacity ** 2) * constant_factor\n\n    # Assign maximum scores for bins with remaining capacity >= item size\n    scores = np.where(remaining_capacity >= item, np.inf, scores)\n\n    return scores",
          "objective": 0.01358,
          "other_inf": null
     }
]
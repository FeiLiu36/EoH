[
     {
          "algorithm": "The new algorithm assigns scores to each bin based on the logarithm of the bin capacity divided by the item size, multiplied by the square of the difference between the bin capacity and item size plus one, then adds the bin capacity divided by the item size, and finally takes the reciprocal of this value. The score of each bin is then normalized by dividing it by the maximum score across all bins.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for the bins\n    scores = 1 / (np.log(bins / item) * (bins - item + 1) ** 2 + bins / item)\n    \n    # Normalize the scores by dividing by the maximum score\n    max_score = np.max(scores)\n    scores = scores / max_score\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
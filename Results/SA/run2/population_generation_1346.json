[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the reciprocal of the ratio of the rest capacity of the bin to the item size, multiplied by the logarithm of the sum of the rest capacities of all bins divided by the rest capacity of the bin.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    ratios = 1 / (bins / item)\n    sum_rest_capacity = np.sum(bins)\n    bin_rest_capacity = np.sum(bins) - bins\n    log_sum_rest_capacity = np.log(sum_rest_capacity)\n    \n    scores = ratios * log_sum_rest_capacity / bin_rest_capacity\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the inverse of the sum of the absolute differences between the remaining capacity of the bin and the item size, then multiplied by the logarithm of the item size, and finally normalizes the scores to ensure consistency and comparability across different bins.\n\nPython implementation:\n``` \nCode:\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    \n    absolute_diff = np.abs(remaining_capacity - item)\n    \n    scores = (1 / np.sum(absolute_diff)) * np.log(item)\n    \n    normalized_scores = (scores - np.min(scores)) / (np.max(scores) - np.min(scores))\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
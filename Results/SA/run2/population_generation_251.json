[
     {
          "algorithm": "New algorithm: The new algorithm calculates the score for each bin by taking the reciprocal of the bin's remaining capacity multiplied by the index position of the bin in descending order, and then returns the scores sorted in descending order.\n\nCode:\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    \n    scores = np.reciprocal(remaining_capacity) * np.arange(len(bins), 0, -1)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
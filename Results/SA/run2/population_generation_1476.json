[
     {
          "algorithm": "The new algorithm computes the scores for each bin based on the square root of the sum of the rest capacities of all the bins, the reciprocal of the absolute difference between the rest capacity of each bin and the item size, and the exponential of the square of the difference between the rest capacity of each bin and the average capacity of all bins. The scores are then modified by a function that emphasizes the assignment of items to bins with higher modified scores, and the modified scores are adjusted by a function that penalizes bins with high rest capacities. Finally, the scores are normalized by dividing them by the sum of the modified scores plus the total number of bins.",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    sum_rest_capacities = np.sqrt(np.sum(bins))  # Square root of the sum of the rest capacities of each bin\n    reciprocal_diff = 1 / np.abs(bins - item)  # Reciprocal of the absolute difference between the rest capacity of each bin and the item size\n    exponential_diff = np.exp(np.square(bins - np.mean(bins)))  # Exponential of the square of the difference between the rest capacity of each bin and the average capacity of all bins\n    modified_scores = np.maximum(sum_rest_capacities, reciprocal_diff, exponential_diff)  # Modify scores by taking the maximum value among the square root, reciprocal, and exponential values\n    modified_scores = np.power(modified_scores, 0.5)  # Adjust scores by taking the square root to emphasize assignment of items to bins with higher scores\n    adjusted_scores = modified_scores / (1 + np.exp(bins - np.mean(bins)))  # Further adjust scores by penalizing bins with high rest capacities\n    sum_modified_scores = np.sum(adjusted_scores)  # Sum of the modified scores\n    scores = adjusted_scores / (sum_modified_scores + len(bins))  # Normalize scores by dividing by the sum of modified scores plus the number of bins\n    return scores",
          "objective": 0.04115,
          "other_inf": null
     }
]
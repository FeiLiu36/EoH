[
     {
          "algorithm": "The new algorithm assigns scores to the bins based on the product of the logarithmic sum of the rest capacities of each bin and the logarithm of the maximum capacity of any bin divided by the item size, and then adds a constant value to each score.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the logarithmic sum of the rest capacities of each bin\n    sum_capacity = np.sum(np.log(bins))\n    \n    # Calculate the logarithm of the maximum capacity of any bin divided by the item size\n    ratio_item = np.log(np.max(bins) / item)\n    \n    # Calculate the scores based on the modified formula and add a constant value\n    scores = (sum_capacity * ratio_item) + 2.0\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
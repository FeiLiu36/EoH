[
     {
          "algorithm": "New algorithm description: The new algorithm calculates the scores for the bins by taking the inverse of the sum of the Euclidean distances between the bin capacity and the item size, raised to the power of the exponential of the item size, and then normalizes them by dividing them by the maximum score.\n\nCode:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for the bins\n    euclidean_distance = np.linalg.norm(bins - item)\n    scores = (1 / euclidean_distance) ** np.exp(item)\n    normalized_scores = scores / np.max(scores)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
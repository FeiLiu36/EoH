[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the bin's rest capacity divided by the item size plus one, subtracting the bin's rest capacity divided by the item size, raising it to the power of the sum of the bin's rest capacity divided by the item size plus one, and finally multiplying it by the square root of the bin's rest capacity divided by the item size plus one.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    score_diff = (bins / (item + 1)) - (bins / item)  # Step 1\n    scores = score_diff * ((bins / item) + 1) ** (((bins / item) + 1).sum())  # Step 2\n    scores *= np.sqrt((bins / item) + 1)  # Step 3\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
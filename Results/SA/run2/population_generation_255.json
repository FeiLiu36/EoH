[
     {
          "algorithm": "New algorithm description: The new algorithm calculates the score for each bin by taking the square root of the remaining capacity of the bin, dividing it by the square root of the item size, and then subtracting the natural logarithm of the maximum capacity of all the bins divided by the remaining capacity of the bin. The scores are then returned in descending order.\n\nCode:\n\n```",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_capacity = np.max(bins)\n    \n    scores = np.sqrt(remaining_capacity) / np.sqrt(item) - np.log(max_capacity / remaining_capacity)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
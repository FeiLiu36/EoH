[
     {
          "algorithm": "The new algorithm assigns scores to each bin based on the logarithm function raised to the power of the cube root of the item size multiplied by the square of the bin capacity divided by the absolute difference between the bin capacity and the item size, then subtracts the median score from each bin score to adjust the range of scores. The scores of each bin are then normalized by dividing them by the maximum score across all bins.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for the bins\n    scores = np.log((item**(1/3)) * (bins**2) / np.abs(bins - item))\n\n    # Adjust the range of scores by subtracting the median score\n    median_score = np.median(scores)\n    scores = scores - median_score\n    \n    # Normalize the scores by dividing by the maximum score\n    max_score = np.max(scores)\n    scores = scores / max_score\n    \n    return scores",
          "objective": 0.04417,
          "other_inf": null
     }
]
[
     {
          "algorithm": "\nThe new algorithm calculates the score for each bin by taking into account the ratio between the item size and the rest capacity of the bin, while also considering the ratio between the sum of the rest capacities of all bins and the maximum rest capacity, and promoting bin utilization by dividing the score with the sum of the rest capacities ratio and adding the item size divided by the maximum bin capacity.\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    rest_capacities_sum = np.sum(bins)\n    rest_capacities_ratio = rest_capacities_sum / max_capacity\n    scores = (item / bins) / (rest_capacities_ratio + item / max_capacity)\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
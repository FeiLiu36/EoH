[
     {
          "algorithm": "New algorithm description: \n\nThe new algorithm assigns scores to each bin based on the ratio between the bin capacity and the item size, multiplied by the logarithm of the bin capacity, divided by the difference between the bin capacity and the item size plus a small constant epsilon. Additionally, the score of each bin is further multiplied by a factor that is the square root of the bin capacity divided by the item size, and then normalized by dividing by the maximum score across all bins.\n\nCode:\n\n",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for the bins\n    scores = (bins / item) * (np.log(bins)) / (bins - item + 1e-6)\n    scores = scores * np.sqrt(bins / item)\n    \n    # Normalize the scores by dividing by the maximum score\n    max_score = np.max(scores)\n    scores = scores / max_score\n    \n    return scores",
          "objective": 0.03864,
          "other_inf": null
     }
]
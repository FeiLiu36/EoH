[
     {
          "algorithm": "My new algorithm assigns scores to the bins based on the ratio between the rest capacity of each bin and the item size, multiplied by the ratio of the sum of the rest capacities of all the bins to the maximum capacity of any bin.\n\nHere is the implementation of the new algorithm:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratio between the rest capacity of each bin and the item size\n    ratio_capacity = bins / item\n    \n    # Calculate the ratio of the sum of the rest capacities of all the bins to the maximum capacity of any bin\n    ratio_sum = np.sum(bins) / np.max(bins)\n    \n    # Calculate the scores based on the modified formula\n    scores = ratio_capacity * ratio_sum\n    \n    # Sort the scores in descending order\n    scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
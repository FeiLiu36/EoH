[
     {
          "algorithm": "New Algorithm Description:\nThe new algorithm calculates the score for each bin based on the difference between the remaining capacity and the item size divided by the maximum capacity, multiplied by the ratio of the maximum capacity to the total sum of the capacities of all the bins, with a constant subtracted. The scores are then normalized to have values between 0 and 1, sorted in descending order, and returned as the scores for the bins.\n\nCode:\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    capacity_ratio_sum = np.max(bins) / np.sum(bins) - 1\n    \n    constant = 0.5\n    scores = (remaining_capacity / np.max(bins)) * capacity_ratio_sum - constant\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    scores -= np.min(scores)\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
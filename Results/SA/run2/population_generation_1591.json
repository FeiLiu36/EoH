[
     {
          "algorithm": "The new algorithm calculates the scores for the bins by taking the square root of the ratio of the logarithm of the item size to the rest capacities of the bins, then subtracting the ratio of the logarithm of the maximum rest capacity to the rest capacities, squared, and taking the exponent of the sum of these values. The resulting scores are normalized by dividing each score by the maximum score.",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    rest_capacity = bins\n    max_rest_capacity = np.max(rest_capacity)\n    \n    scores = np.sqrt(np.log(item) / rest_capacity) - np.log(max_rest_capacity) / rest_capacity ** 2\n    scores = np.exp(np.sum(scores))\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
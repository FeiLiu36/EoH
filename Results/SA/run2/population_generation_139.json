[
     {
          "algorithm": "\nThe new algorithm calculates the score for each bin by taking the log of the remaining capacity of each bin divided by the log of the maximum capacity, then subtracting the reciprocal of the item size, multiplying it by a constant term equal to three times the remaining capacity, and finally adding a constant term equal to the square root of the maximum capacity divided by the item size. The algorithm then sorts the scores in descending order and returns them as an array.\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = bins - item\n    scores = (np.log(remaining_capacity) / np.log(max_capacity) - (1 / item)) * (3 * remaining_capacity) + (np.sqrt(max_capacity) / item)\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
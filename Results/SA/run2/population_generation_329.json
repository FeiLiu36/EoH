[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacities of the bins, the ratio of the current item size to the bin capacity, and a penalty factor that increases as the ratio exceeds a certain threshold. The scores are then adjusted by multiplying them with the penalty factor, and the scores are returned in descending order.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    ratio = item / bins\n\n    # Penalty factor that increases as the ratio exceeds a certain threshold\n    penalty_factor = np.where(ratio > 0.8, np.exp(10 * (ratio - 0.8)), 1)\n\n    scores = ratio * penalty_factor\n\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
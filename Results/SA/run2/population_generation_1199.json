[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the reciprocal of the remaining capacity divided by the maximum capacity, multiplied by the square of the natural logarithm of the item size divided by the minimum remaining capacity, then subtracting the natural logarithm of the maximum capacity divided by the square root of the item size, and finally dividing the whole expression by the logarithm of the maximum capacity divided by the minimum remaining capacity, squared, raised to the power of the item size.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    min_capacity = np.min(bins)\n    log_item = np.log(item)\n    sqrt_item = np.sqrt(item)\n\n    scores = (1 / (bins / max_capacity)) * (log_item / min_capacity)**2 - (np.log(max_capacity) / sqrt_item) / (np.log(max_capacity) / min_capacity)**2\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New algorithm: The new algorithm calculates the score for each bin based on the remaining capacity, the maximum remaining capacity, and the average remaining capacity of the bins. It uses a different scoring formula that includes a combination of polynomial, exponential, and logarithmic terms, with additional modification where the exponential term is multiplied by the square of the average remaining capacity. The scores are sorted in descending order and returned.\n\nCode:\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_remaining_capacity = np.max(bins)\n    avg_remaining_capacity = np.mean(remaining_capacity)\n    \n    # Constants for adjusting importance of each term in the scoring formula\n    polynomial_factor = 0.3\n    exponential_factor = 0.5\n    logarithmic_factor = 0.9\n    \n    scores = (\n        polynomial_factor * (remaining_capacity - max_remaining_capacity) ** 4 +\n        exponential_factor * (avg_remaining_capacity ** 2) * np.exp(avg_remaining_capacity / max_remaining_capacity) +\n        logarithmic_factor * np.log(remaining_capacity + 2)\n    )\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm assigns a score to each bin based on the remaining capacities of the bins using a modified formula that incorporates the logarithm of the ratio of the item size to the remaining capacity, as well as the reciprocal of the sum of the remaining capacity and the item size. The scores are then normalized to a range between 0 and 1.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    \n    log_ratio = np.log(item / remaining_capacity)\n    reciprocal_sum = 1 / (remaining_capacity + item)\n    \n    scores = log_ratio * reciprocal_sum\n    \n    normalized_scores = (scores - np.min(scores)) / (np.max(scores) - np.min(scores))\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
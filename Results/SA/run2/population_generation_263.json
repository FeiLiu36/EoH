[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the difference between the remaining capacity of the bin and the item size, dividing it by the ratio of the maximum capacity of the bin to the sum of the maximum capacities of all the bins, and finally multiplying it with the square root of the item size. The scores are then returned in descending order.",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_capacity = np.max(bins)\n    max_capacity_sum = np.sum(bins)\n\n    scores = (remaining_capacity / (max_capacity / max_capacity_sum)) * np.sqrt(item)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
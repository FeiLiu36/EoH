[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on a weighted sum of three terms: the remaining capacity divided by the maximum capacity, the ratio of the item size to the remaining capacity, and a penalty term that accounts for the difference between the maximum capacity and the remaining capacity. The scores are then sorted in descending order and returned as the scores for the bins.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    max_capacity = np.max(bins)\n    capacity_ratio = remaining_capacity / max_capacity\n    penalty_term = (max_capacity - remaining_capacity) / max_capacity\n    item_ratio = item / remaining_capacity\n    scores = (capacity_ratio + penalty_term) * item_ratio\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
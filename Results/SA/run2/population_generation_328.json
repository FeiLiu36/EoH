[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacities of the bins, the ratio of the current item size to the bin capacity, and a weighted factor that increases as the bin index increases. The score is then adjusted by multiplying it with the weighted factor, and the scores are returned in descending order.\n\nHere is the implementation in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    ratio = item / bins\n\n    # Weighted factor that increases as the bin index increases\n    index_weight = np.exp(np.arange(len(bins)) + 1)\n\n    scores = ratio * index_weight\n\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
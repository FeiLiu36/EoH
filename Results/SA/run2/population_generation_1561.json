[
     {
          "algorithm": "The new algorithm calculates the score for each bin by summing the element-wise product of the rest capacity of the bin and the item size, dividing it by the maximum bin capacity, dividing it by the sum of the rest capacities of all the bins, multiplying it by a factor of (1 - item_size / max_capacity), and finally multiplying it by (item_size / max_capacity) raised to the power of 0.75. The scores are then returned as a numpy array.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    rest_capacity_sum = np.sum(rest_capacity)\n    scaling_factor = 1 - item / max_capacity\n    scores = ((rest_capacity * item) / max_capacity) / rest_capacity_sum * scaling_factor * (item / max_capacity) ** 0.75\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "Algorithm description: The new algorithm assigns scores to each bin based on the sum of the reciprocal of the rest capacities of each bin, the difference between the maximum capacity and the item size, and the logarithm of the sum of the rest capacities.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    num_bins = len(bins)\n    \n    # Calculate the sum of the reciprocal of the rest capacities of each bin\n    sum_reciprocal_rest_capacities = np.sum(1 / bins)\n    \n    # Calculate the difference between the maximum capacity and the item size\n    diff_max_item = np.max(bins) - item\n    \n    # Calculate the logarithm of the sum of the rest capacities\n    log_sum_rest_capacities = np.log(np.sum(bins))\n    \n    # Calculate the scores based on the modified formula\n    scores = sum_reciprocal_rest_capacities + diff_max_item + log_sum_rest_capacities\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
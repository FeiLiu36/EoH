[
     {
          "algorithm": "This is your new algorithm:\n\nThe new algorithm involves dividing the remaining capacity of each bin by the maximum remaining capacity, multiplying it by a weight factor based on the ratio between the item size and the bin capacity, and adding a bonus term to the score that rewards bins with small remaining capacities. The bonus term is based on the difference between the maximum remaining capacity and the remaining capacity, divided by the bonus factor.\n\nHere's the implementation of the algorithm in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    # Calculate the remaining capacity\n    remaining_capacity = bins - item\n\n    # Get the maximum remaining capacity\n    max_remaining_capacity = np.max(remaining_capacity)\n\n    # Calculate the scores for each bin with the bonus term\n    bonus_factor = 0.5\n    scores = (remaining_capacity / max_remaining_capacity) * (item / bins) + (max_remaining_capacity - remaining_capacity) / bonus_factor\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
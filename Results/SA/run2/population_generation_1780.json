[
     {
          "algorithm": "The new algorithm calculates the scores for the bins by dividing the remaining capacities of the bins after assigning the item by the maximum capacity, then taking the negative of the logarithm of the result. Finally, it sets the scores of bins that are not used to a large negative value.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the remaining capacities of the bins after assigning the item\n    remaining_capacity = bins - item\n    \n    # Calculate the scores for the bins based on the division of remaining capacities by the maximum capacity\n    scores = -np.log(remaining_capacity / np.max(bins))\n    \n    # Set the scores of bins that are not used to a large negative value\n    scores[remaining_capacity >= bins] = -np.inf\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New Algorithm Description: The scoring function assigns scores to bins based on the remaining capacities of each bin and the item size. Bins with smaller differences between their remaining capacity and the item size will receive higher scores, while bins with larger differences will receive lower scores. The final scores for the bins are normalized to ensure they sum up to 1.\n\nNew Algorithm Implementation:\n\n``` ",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    num_bins = len(bins)\n\n    # Calculate differences between remaining capacity and the item size\n    diff = bins - item\n\n    # Assign higher scores to bins with smaller differences between remaining capacity and the item size\n    scores = 1 / (1 + np.abs(diff))\n\n    # Adjust scores to ensure they sum up to 1\n    scores = scores / np.sum(scores)\n\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
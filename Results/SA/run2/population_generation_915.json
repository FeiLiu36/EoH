[
     {
          "algorithm": "The new algorithm, named \"Modified Exponential Decay Algorithm,\" assigns scores to the bins based on the exponential decay of the remaining bin capacity, giving more weight to bins with larger remaining capacity. The scores are then adjusted based on the number of bins used so far, aiming to minimize the number of used bins. Bins with exactly the maximum capacity are also considered for assignment.\n\nHere is the updated code for the new algorithm:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratio between remaining bin capacity and maximum bin capacity\n    ratios = bins / np.max(bins)\n\n    # Calculate the scores using the exponential decay function with weights\n    weights = np.exp(-ratios) # You can modify the decay rate based on your requirements\n\n    # Add a small constant to bins with maximum capacity to include them for assignment\n    bins_with_max_capacity = np.where(bins == np.max(bins))\n    weights[bins_with_max_capacity] += 0.001\n\n    # Adjust scores based on the number of used bins so far\n    num_used_bins = np.count_nonzero(bins < np.max(bins))\n    weights = np.maximum(weights - 0.1*num_used_bins, 0)\n\n    scores = weights\n\n    return scores",
          "objective": 0.04085,
          "other_inf": null
     }
]
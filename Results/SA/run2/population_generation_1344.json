[
     {
          "algorithm": "The new algorithm: The new algorithm calculates the score for each bin by multiplying the reciprocal of the sum of the ratios of the item size to the rest capacities of all bins, the logarithm of the sum of the rest capacities of all bins, and the reciprocal of the maximum rest capacity of all bins, divided by the reciprocal of the item size.\n\nImplementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    sum_ratios = np.sum(item / bins)\n    sum_rest_capacity = np.sum(bins)\n    max_rest_capacity = np.max(bins)\n    \n    scores = (1 / sum_ratios) * np.log(sum_rest_capacity) * (1 / max_rest_capacity) * (1 / item)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
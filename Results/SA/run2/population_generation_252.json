[
     {
          "algorithm": "\nNew algorithm: The new algorithm calculates the score for each bin by taking the inverse of the bin's remaining capacity divided by the square root of the index position subtracted by the natural logarithm of the bin's remaining capacity plus 1, and then returns the scores sorted in descending order.\n",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n\n    scores = np.reciprocal(remaining_capacity) / np.sqrt(np.arange(len(bins), 0, -1)) - np.log(remaining_capacity + 1)\n\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
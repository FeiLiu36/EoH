[
     {
          "algorithm": "New algorithm description: \n\nThe new algorithm calculates the score for each bin by dividing the logarithm of the remaining capacity of the bin by the square root of the item size, multiplied by the exponential of the ratio of the maximum capacity of the bin to the sum of the maximum capacities of all the bins, and finally multiplying it with the square root of the result. The scores are then returned in descending order.\n\nCode:\n\n```",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_capacity = np.max(bins)\n    max_capacity_sum = np.sum(bins)\n\n    scores = (np.log(remaining_capacity) / np.sqrt(item)) * np.exp(max_capacity / max_capacity_sum)\n    scores = np.sqrt(scores)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
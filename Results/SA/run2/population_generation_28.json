[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacity and a priority factor. It prioritizes bins with smaller remaining capacities and larger priority factors. If the remaining capacity of a bin is greater than or equal to the item size, the score is set to a large negative value. Otherwise, the score is calculated as follows: the ratio of remaining capacity to item size multiplied by the priority factor plus a small positive value to handle divisions by zero, and then taking the reciprocal. The score is also adjusted based on the square root of the priority factor.\n\nHere is the implementation of the new algorithm in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_item_size = np.max(item)\n    max_remaining_capacity = np.max(bins)\n    priority_factor = max_remaining_capacity / max_item_size\n    \n    scores = np.zeros(len(bins), dtype=np.float64)\n    scores[bins >= item] = -np.inf\n    \n    remaining_capacity = bins[bins < item]\n    scores[bins < item] = (remaining_capacity / item) * priority_factor + 1e-8\n    scores[bins < item] = 1 / (np.sqrt(scores[bins < item]) + 1e-8)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
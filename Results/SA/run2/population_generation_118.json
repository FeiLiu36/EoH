[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the inverse of the remaining capacity divided by the maximum capacity, and then adds a penalty term based on the difference between the largest remaining capacity and the current bin's remaining capacity. The scores are then sorted in descending order and returned as the scores for the bins.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = bins - item\n    capacity_ratio = 1 / (remaining_capacity / np.max(bins))\n    penalty_term = np.max(remaining_capacity) - remaining_capacity\n    scores = capacity_ratio + penalty_term\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
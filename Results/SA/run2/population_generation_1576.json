[
     {
          "algorithm": "New algorithm description: In the new algorithm, the scores for the bins are calculated by taking the logarithm of the rest capacity of each bin divided by the maximum capacity, then multiplying it by the exponential of the negative value of the item size, followed by adding the exponential of the negative value of the logarithm of the sum of the remaining capacities of all the bins, and finally subtracting the exponential of the negative value of the logarithm of the maximum capacity.\n\nCode:\n\n```",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    rest_capacity_sum = np.sum(rest_capacity)\n    scores = np.log(rest_capacity / max_capacity) * np.exp(-item) + np.exp(-np.log(rest_capacity_sum)) - np.exp(-np.log(max_capacity))\n    return scores",
          "objective": 0.04085,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New algorithm description: The new algorithm calculates the score for each bin based on a combination of a quadratic function of the remaining capacities and a logarithmic transformation of the exponential ratio. It then applies a square root transformation to the scores and returns them in descending order.\n\nCode:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_remaining_capacity = np.max(bins)\n    exponential_ratio = np.exp(remaining_capacity) / np.exp(max_remaining_capacity)\n    \n    # Constants for adjusting importance of each term in the scoring formula\n    quadratic_factor = 0.5\n    \n    quadratic_term = quadratic_factor * np.power(remaining_capacity, 2)\n    log_term = np.log(exponential_ratio + 1)\n    \n    scores = np.sqrt(quadratic_term + log_term)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
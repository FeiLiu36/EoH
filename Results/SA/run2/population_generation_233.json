[
     {
          "algorithm": "The new algorithm is based on the concept of \"weighted remaining capacity\". The scores for the bins are calculated by taking the remaining capacity of each bin divided by the item size, and then subtracting a weight value that is proportional to the difference between the maximum capacity of the bins and the remaining capacity of each bin. The scores are then sorted in descending order.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    remaining_capacity = max_capacity - bins\n    weighted_remaining_capacity = remaining_capacity - (max_capacity - bins)\n    \n    scores = weighted_remaining_capacity / item\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
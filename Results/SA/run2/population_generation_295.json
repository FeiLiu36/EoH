[
     {
          "algorithm": "New algorithm description (Modified version):\n\nThe modified algorithm updates the scoring formula to be the sum of four components: (1) the difference between the remaining capacity of the bin and the maximum remaining capacity across all bins, (2) the logarithm of the difference between the mean remaining capacity of all bins and the remaining capacity of the bin, (3) the square root of the index of the bin starting from 1 and going up to the number of bins, and (4) the square of the difference between the remaining capacity of the bin and the mean remaining capacity of all bins. The bins are then sorted in descending order based on their scores, and the scores are returned as the output.\n\nModified algorithm implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    mean_remaining_capacity = np.mean(bins)\n    max_remaining_capacity = np.max(bins)\n    bin_indices = np.arange(1, len(bins) + 1)\n\n    scores = (\n        (remaining_capacity - max_remaining_capacity)\n        + np.log(mean_remaining_capacity - remaining_capacity)\n        + np.sqrt(bin_indices)\n        + (remaining_capacity - mean_remaining_capacity) ** 2\n    )\n\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
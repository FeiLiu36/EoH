[
     {
          "algorithm": "A new algorithm is created where the scores for bins are calculated based on the remaining capacity of each bin divided by the item size and multiplied by a scaling factor which is initially set to the maximum capacity of the bins. The scores are then sorted in descending order.\n\nHere's the implementation in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for bins based on the remaining capacity divided by item size\n    scores = bins / item\n    \n    # Initialize the scaling factor to the maximum capacity of the bins\n    scaling_factor = np.max(bins)\n    \n    # Multiply the scores by the scaling factor\n    scores *= scaling_factor\n    \n    # Sort the scores in descending order\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New Algorithm Description: The new algorithm assigns scores to the bins based on a modified formula that includes the product of the ratio between the item size and the rest capacity of each bin and the inverse of the ratio between the maximum capacity and the item size.\n\nCode:\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the product of the ratio between the item size and the rest capacity of each bin\n    ratio_capacity = item / bins\n    \n    # Calculate the inverse of the ratio between the maximum capacity and the item size\n    ratio_inverse = 1 / (np.max(bins) / item)\n    \n    # Calculate the scores based on the modified formula\n    scores = ratio_capacity * ratio_inverse\n    \n    # Sort the scores in descending order\n    scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
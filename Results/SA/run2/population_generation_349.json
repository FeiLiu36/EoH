[
     {
          "algorithm": "New algorithm description: The modified algorithm assigns a score to each bin based on a combination of factors including the remaining capacities of the bins, the difference between the maximum capacity and the remaining capacity, and the squared ratio of the item size to the remaining capacity. The scores are then normalized to a range between 0 and 1.\n\nNew code:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    \n    max_capacity = np.max(bins)\n    diff_capacity = max_capacity - remaining_capacity\n    \n    squared_ratio = (item / remaining_capacity)**2\n    \n    scores = remaining_capacity * diff_capacity * squared_ratio\n    \n    normalized_scores = (scores - np.min(scores)) / (np.max(scores) - np.min(scores))\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
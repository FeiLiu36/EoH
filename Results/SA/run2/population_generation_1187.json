[
     {
          "algorithm": "The new algorithm assigns a score to each bin by taking the product of the remaining capacity divided by the maximum capacity, the logarithm of the item size divided by the maximum capacity, and the natural logarithm of the sum of the remaining capacities divided by the maximum capacity, then subtracting the natural logarithm of the item size divided by the maximum capacity.\n\nHere is the implementation of the new algorithm in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    max_capacity = np.max(bins)\n    log_item = np.log(item)\n    log_sum_caps = np.log(np.sum(bins))\n    \n    scores = (bins / max_capacity) * (log_item / max_capacity) * np.log(log_sum_caps / max_capacity) - log_item / max_capacity\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
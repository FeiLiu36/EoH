[
     {
          "algorithm": "New Algorithm (Modified Version):\n\nThe modified algorithm updates the scoring formula to be the sum of four components: (1) the exponential of the negative difference between the remaining capacity of the bin and the minimum remaining capacity across all bins, (2) the square root of the ratio between the remaining capacity of the bin and the maximum remaining capacity of all bins, (3) the logarithm of the index of the bin starting from 1 and going up to the number of bins, and (4) the reciprocal of the square root of the sum of the remaining capacities of all bins.\nThe bins are then sorted in descending order based on their scores, and the scores are returned as the output.\n\nModified Algorithm Implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    min_remaining_capacity = np.min(bins)\n    max_remaining_capacity = np.max(bins)\n    bin_indices = np.arange(1, len(bins) + 1)\n    sum_remaining_capacity = np.sum(bins)\n\n    scores = (\n        np.exp(-(remaining_capacity - min_remaining_capacity))\n        + np.sqrt(remaining_capacity / max_remaining_capacity)\n        + np.log(bin_indices)\n        + 1 / np.sqrt(sum_remaining_capacity)\n    )\n\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
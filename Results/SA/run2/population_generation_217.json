[
     {
          "algorithm": "The new algorithm calculates the scores for each bin based on a quadratic function, with the scores proportional to the square of the remaining capacity, and then sorts the scores in descending order before returning them. \n\nHere is the implementation of the new algorithm in Python:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the remaining capacity after assigning the item to each bin\n    remaining_capacity = bins - item\n    \n    # Calculate the scores for each bin using a quadratic function (scaled by 1000)\n    scores = 1000 * remaining_capacity**2\n    \n    # Sort the indices of bins in descending order based on the scores\n    sorted_indices = np.argsort(scores)[::-1]\n    \n    # Reorder the scores based on the sorted indices\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
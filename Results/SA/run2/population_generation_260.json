[
     {
          "algorithm": "New algorithm description: The new algorithm calculates the score for each bin by taking the reciprocal of the remaining capacity of the bin divided by the square root of the item size, raised to the power of the logarithm of the maximum capacity of the bin divided by the sum of the maximum capacities of all the bins, and finally taking the exponential of the result. The scores are then returned in descending order.\n\nCode:\n\n```\n",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    remaining_capacity = bins - item\n    max_capacity = np.max(bins)\n    max_capacity_sum = np.sum(bins)\n\n    scores = np.exp((1 / remaining_capacity) ** (np.sqrt(item) / np.log(max_capacity / max_capacity_sum)))\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
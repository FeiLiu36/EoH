[
     {
          "algorithm": "New algorithm description: The modified algorithm calculates the score for each bin based on the remaining capacity and the ratio between the remaining capacity and the item size, prioritizing bins with smaller remaining capacities and larger ratios. If the remaining capacity of a bin is greater than or equal to the maximum capacity minus the item size, the score is set to -np.inf. Otherwise, the score is (remaining_capacity + item) / (remaining_capacity + 1).\n\nNew code:\n\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    scores = np.zeros_like(bins, dtype=float)\n    \n    for i, remaining_capacity in enumerate(bins):\n        if remaining_capacity >= (max_capacity - item):\n            scores[i] = -np.inf\n        else:\n            scores[i] = (remaining_capacity + item) / (remaining_capacity + 1)\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the ratio of the remaining capacity to the item size, multiplied by the logarithm of the ratio of the maximum capacity to the difference between the maximum and minimum capacities of the bin, with a constant added. The scores are then normalized to have values between 0 and 1, and sorted in descending order before being returned as the scores for the bins.",
          "code": "import numpy as np\nimport math\n\ndef score(item, bins):\n    remaining_capacity_ratio = bins / item\n    capacity_ratio_difference = np.log(np.max(bins) / (np.max(bins) - np.min(bins)) + 1)\n    \n    constant = 0.5\n    scores = remaining_capacity_ratio * capacity_ratio_difference + constant\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "New Algorithm Description: The new algorithm assigns scores to the bins based on a modified formula that includes the inverse of the ratio between the item size and the rest capacity of each bin, multiplied by the logarithm of the sum of the rest capacities of all the bins divided by the maximum capacity.\n\nCode:\n\n```",
          "code": "import numpy as np\nimport math\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the inverse of the ratio between the item size and the rest capacity of each bin\n    ratio_capacity = 1 / (item / bins)\n    \n    # Calculate the logarithm of the sum of the rest capacities of all the bins divided by the maximum capacity\n    ratio_log = np.log(np.sum(bins) / np.max(bins))\n    \n    # Calculate the scores based on the modified formula\n    scores = ratio_capacity * ratio_log\n    \n    # Sort the scores in descending order\n    scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the scores for the bins by taking the reciprocal of the square of the absolute difference between the bin capacity and the item size, exponentiates it by the reciprocal of twice the cube root of the bin capacity, multiplies it by the item size, and normalizes the scores by dividing them by the maximum score.\nHere is the implementation of the new algorithm in Python:\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the scores for the bins\n    difference = bins - item\n    scores = 1 / np.square(np.abs(difference))\n    scores = np.power(scores, 1 / (2 * np.cbrt(bins)))\n    scores *= item\n    normalized_scores = scores / np.max(scores)\n\n    return scores",
          "objective": 0.03974,
          "other_inf": null
     }
]
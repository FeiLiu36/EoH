[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the ratio of remaining capacity to the item size, the difference between the average capacity and the ratio of remaining capacity to the item size, and the difference between the maximum capacity and the ratio of remaining capacity to the item size. The scores are then multiplied by the maximum capacity, sorted in descending order, and divided by the maximum score before being returned.\n\nHere's the implementation of the new algorithm:\n\n```\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity_ratio = bins / item\n    average_capacity_ratio_difference = np.abs(np.mean(bins) - remaining_capacity_ratio)\n    maximum_capacity_ratio_difference = np.abs(np.max(bins) - remaining_capacity_ratio)\n    \n    scores = remaining_capacity_ratio * average_capacity_ratio_difference * maximum_capacity_ratio_difference\n    scores *= np.max(bins)\n    \n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    scores /= np.max(scores)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
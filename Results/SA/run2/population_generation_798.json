[
     {
          "algorithm": "The new algorithm assigns scores to the bins based on the product of the inverse of the ratio between the item size and the rest capacity of each bin, and the inverse of the ratio between the rest capacity of each bin and the sum of the rest capacities of all the bins.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the inverse of the ratio between the item size and the rest capacity of each bin\n    ratio_capacity = 1 / (item / bins)\n    \n    # Calculate the inverse of the ratio between the rest capacity of each bin and the sum of the rest capacities of all the bins\n    ratio_sum = 1 / (bins / np.sum(bins))\n    \n    # Calculate the scores based on the modified formula\n    scores = ratio_capacity * ratio_sum\n    \n    # Sort the scores in descending order\n    scores = np.sort(scores)[::-1]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
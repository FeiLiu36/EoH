[
     {
          "algorithm": "\nThe new algorithm assigns scores to the bins based on the sum of the inverse of the product of the bin capacity and the item size, multiplied by a factor of the inverse of the square root of the sum of all squared ratios, where each ratio is squared and then normalized by dividing it by the sum of all squared ratios.\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the ratios of inverse of bin capacity to item size\n    ratios = (1 / (bins * item))\n    \n    # Calculate the sum of all squared ratios\n    sum_squared_ratios = np.sum((ratios ** 2))\n    \n    # Calculate the scores for the bins\n    scores = (ratios ** 2) / sum_squared_ratios\n    \n    # Multiply by a factor of the inverse of the square root of the sum of all squared ratios\n    scores *= 1 / np.sqrt(sum_squared_ratios)\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
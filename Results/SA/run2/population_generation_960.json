[
     {
          "algorithm": "new algorithm: \"Modified Remaining Capacity Score Algorithm\" assigns scores to the bins based on a modified version of the remaining capacity score formula that takes into account factors like the minimum capacity among the bins, the average capacity of the bins, and the difference between the remaining capacity of each bin and the average capacity, in order to prioritize bins with larger remaining capacities and minimize the number of used bins.\n\n",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the remaining capacities of the bins\n    remaining_capacity = bins - item\n\n    # Calculate the minimum capacity among the bins\n    min_capacity = np.min(bins)\n\n    # Calculate the average capacity of the bins\n    avg_capacity = np.mean(bins)\n\n    # Calculate the difference between the remaining capacity of each bin and the average capacity\n    diff_capacity = remaining_capacity - avg_capacity\n\n    # Calculate the score based on the modified remaining capacities, minimum capacity, and the difference in capacities\n    scores = np.exp(remaining_capacity - min_capacity - diff_capacity)\n\n    # Minimize the score of bins with remaining capacity equal to the maximum capacity\n    max_capacity = np.max(bins)\n    scores[bins == max_capacity] = -np.inf\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
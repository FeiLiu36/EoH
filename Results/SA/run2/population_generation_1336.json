[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the product of the rest capacities of all bins divided by the item size plus one, subtracting the rest capacity of the bin divided by the item size plus one, raising it to the power of the sum of the rest capacities of all bins divided by the item size, and finally multiplying it by the square root of the sum of the rest capacities of all bins divided by the item size.",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    rest_capacities = bins / item\n    scores = np.product(rest_capacities + 1) - (bins / (item + 1))\n    scores = scores ** ((bins / item).sum()) \n    scores *= np.sqrt((bins.sum() / item))\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin by taking the exponential function of the remaining capacity of each bin divided by the maximum capacity, then adding the item size divided by the remaining capacity of the bin, multiplying it by a constant term equal to the square root of the maximum capacity, and finally subtracting the cube root of the remaining capacity of the bin. The algorithm then normalizes the scores by dividing them by the maximum score and returns the scores in descending order as a Numpy array.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    remaining_capacity = bins - item\n    scores = (np.exp(remaining_capacity / max_capacity) + (item / remaining_capacity)) * np.sqrt(max_capacity) - np.cbrt(remaining_capacity)\n    scores = scores / np.max(scores)\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin by summing the ratio between the rest capacity of the bin and the item size, taking the absolute value of this ratio divided by the maximum bin capacity, scaling it by a factor of (1 - item_size / max_capacity), and finally multiplying it by (item_size / max_capacity) raised to the power of 0.5. The scores are then returned as a numpy array.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    scaling_factor = 1 - item / max_capacity\n    scores = np.abs((rest_capacity / item).sum() / max_capacity) * scaling_factor * (item / max_capacity) ** 0.5\n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
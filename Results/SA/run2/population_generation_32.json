[
     {
          "algorithm": "\nMy new algorithm calculates the score for each bin based on the ratio of the remaining capacity to the item size, multiplied by a priority factor. It prioritizes bins with smaller ratios and larger priority factors. The score is then adjusted based on the square root of the ratio, and bins with remaining capacity greater than or equal to the item size are assigned a large negative value.\n",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_item_size = np.max(item)\n    max_remaining_capacity = np.max(bins)\n    priority_factor = max_remaining_capacity / max_item_size\n    \n    scores = np.zeros(len(bins), dtype=np.float64)\n    scores[bins >= item] = -np.inf\n    \n    ratio = bins[bins < item] / item\n    scores[bins < item] = ratio * priority_factor\n    scores[bins < item] = np.sqrt(scores[bins < item]) * np.sqrt(ratio)\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
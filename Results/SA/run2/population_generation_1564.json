[
     {
          "algorithm": "The new algorithm calculates the score for each bin by multiplying the element-wise product of the rest capacity of the bin and the item size by the inverse of the maximum bin capacity, then subtracts the square root of the sum of the rest capacities of all the bins, and finally multiplies it by the square root of (1 - item_size / max_capacity).",
          "code": "import numpy as np\n\ndef score(item, bins):\n    max_capacity = np.max(bins)\n    rest_capacity = max_capacity - bins\n    rest_capacity_sum = np.sum(rest_capacity)\n    scores = (rest_capacity * item) * (1 / max_capacity) - np.sqrt(rest_capacity_sum) * np.sqrt(1 - item / max_capacity)\n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
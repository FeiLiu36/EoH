[
     {
          "algorithm": "Algorithm description: \n\nThe new algorithm calculates the scores for each bin based on a function that takes into account the remaining capacity of each bin and the item size. The scores are determined by multiplying the remaining capacity by a factor and then subtracting the item size. The scores are then sorted in descending order before returning them.\n\nAlgorithm implementation:\n\n``` ",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    # Calculate the remaining capacity after assigning the item to each bin\n    remaining_capacity = bins - item\n    \n    # Calculate the scores for each bin using the function (subtracting item size from remaining capacity)\n    scores = remaining_capacity - item\n    \n    # Sort the scores in descending order\n    sorted_indices = np.argsort(scores)[::-1]\n    scores = scores[sorted_indices]\n    \n    return scores",
          "objective": 0.04226,
          "other_inf": null
     }
]
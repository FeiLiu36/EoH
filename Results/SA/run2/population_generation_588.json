[
     {
          "algorithm": "New algorithm description: In the new algorithm, we modify the scoring function by considering the difference between the remaining capacity of a bin and the item size. Bins with remaining capacity closer to the item size will receive higher scores, while bins with larger or smaller remaining capacities will receive lower scores. The final scores for the bins are calculated by combining the base scores and the distance-based scores.\n\nNew algorithm implementation:\n\n```",
          "code": "import numpy as np\n\ndef score(item: int, bins: np.ndarray) -> np.ndarray:\n    num_bins = len(bins)\n    \n    # Calculate base scores\n    base_scores = 1 - bins / item\n    \n    # Calculate distance-based scores\n    distance_scores = np.abs(bins - item)\n    \n    # Calculate final scores by combining base scores and distance-based scores\n    scores = base_scores * distance_scores\n    \n    return scores",
          "objective": 0.03984,
          "other_inf": null
     }
]
[
     {
          "algorithm": "The new algorithm calculates the score for each bin based on the remaining capacity of the bin divided by the sum of the remaining capacity of all bins plus a weighted sum of the capacities of the current item and all the other items already assigned to the bin, and then returns the scores as a Numpy array.",
          "code": "import numpy as np\n\ndef score(item, bins):\n    remaining_capacity = np.sum(bins) + item - bins\n    item_weighted_sum = np.sum(bins * item)\n    scores = remaining_capacity / (np.sum(remaining_capacity) + item_weighted_sum)\n    return scores",
          "objective": 0.02757,
          "other_inf": null
     }
]